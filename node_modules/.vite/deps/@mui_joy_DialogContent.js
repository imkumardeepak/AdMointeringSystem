"use client";
import {
  dialogTitleClasses_default
} from "./chunk-4HH2J7WD.js";
import {
  ModalDialogVariantColorContext_default
} from "./chunk-UBAVAZ7S.js";
import {
  modalDialogClasses_default
} from "./chunk-VGUZQIZJ.js";
import {
  StyledCardContentRoot
} from "./chunk-CZFDETMG.js";
import "./chunk-BXMPL632.js";
import "./chunk-EZEBXC5X.js";
import "./chunk-6SSKRKT7.js";
import "./chunk-6DWJOMHT.js";
import "./chunk-3BL7RAH3.js";
import "./chunk-GSZ7ISAW.js";
import "./chunk-SNOWATU3.js";
import "./chunk-XSKQRUUV.js";
import {
  useSlot
} from "./chunk-C6SZBNSD.js";
import {
  styled_default,
  useThemeProps
} from "./chunk-BUCVNCPY.js";
import "./chunk-RRJ5VGGI.js";
import {
  generateUtilityClass,
  generateUtilityClasses
} from "./chunk-PZDGVPLT.js";
import "./chunk-B7R4NNJ7.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  composeClasses,
  init_extends,
  init_objectWithoutPropertiesLoose
} from "./chunk-6YVPZCJW.js";
import "./chunk-U224OPQK.js";
import {
  require_prop_types
} from "./chunk-UJS64D3A.js";
import {
  require_jsx_runtime
} from "./chunk-U73TBONF.js";
import {
  require_react
} from "./chunk-ZGRSIX2Q.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@mui/joy/DialogContent/DialogContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/joy/DialogContent/dialogContentClasses.js
function getDialogContentUtilityClass(slot) {
  return generateUtilityClass("MuiDialogContent", slot);
}
var dialogContentClasses = generateUtilityClasses("MuiDialogContent", ["root"]);
var dialogContentClasses_default = dialogContentClasses;

// node_modules/@mui/joy/DialogContent/DialogContent.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["component", "children", "orientation", "slots", "slotProps"];
var useUtilityClasses = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getDialogContentUtilityClass, {});
};
var DialogContentRoot = styled_default(StyledCardContentRoot, {
  name: "JoyDialogContent",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme
}) => ({
  color: `var(--DialogContent-color, ${theme.vars.palette.text.tertiary})`,
  overflow: "auto",
  margin: "var(--unstable_DialogContent-margin)",
  [`.${modalDialogClasses_default.root} > .${dialogTitleClasses_default.root} + &`]: {
    "--unstable_DialogContent-margin": "-0.375em 0 0 0"
  }
}));
var DialogContent = React.forwardRef(function DialogContent2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "JoyDialogContent"
  });
  const context = React.useContext(ModalDialogVariantColorContext_default);
  const {
    component = "div",
    children,
    orientation = "vertical",
    slots = {},
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const externalForwardedProps = _extends({}, other, {
    component,
    slots,
    slotProps
  });
  const ownerState = _extends({}, props, {
    component,
    orientation
  });
  const classes = useUtilityClasses();
  const [SlotRoot, rootProps] = useSlot("root", {
    ref,
    className: classes.root,
    elementType: DialogContentRoot,
    externalForwardedProps,
    ownerState,
    additionalProps: {
      id: context == null ? void 0 : context.describedBy
    }
  });
  return (0, import_jsx_runtime.jsx)(SlotRoot, _extends({}, rootProps, {
    children
  }));
});
true ? DialogContent.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used to render icon or text elements inside the CardContent if `src` is not set.
   * This can be an element, or just a string.
   */
  children: import_prop_types.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * The component orientation.
   * @default 'vertical'
   */
  orientation: import_prop_types.default.oneOf(["horizontal", "vertical"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types.default.shape({
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: import_prop_types.default.shape({
    root: import_prop_types.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
var DialogContent_default = DialogContent;
export {
  DialogContent_default as default,
  dialogContentClasses_default as dialogContentClasses,
  getDialogContentUtilityClass
};
//# sourceMappingURL=@mui_joy_DialogContent.js.map
